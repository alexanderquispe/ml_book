[["vaccine-rct-examples.html", "Chapter 4 Vaccine RCT Examples 4.1 Polio RCT 4.2 Pfizer/BNTX Covid-19 RCT", " Chapter 4 Vaccine RCT Examples Victor Chernozhukov. This notebook contains some RCT examples that I will be using for teaching. 4.1 Polio RCT One of the earliest randomized experiments were the Polio vaccination trias conducted by the Public Health Service in 1954. The question was whether Salk vaccine prevented polio. Children in the study were randomly assigned either a treatment (polio vaccine shot) or a placebo (saline solution shot), without knowing which one they received. The doctors in the study, making the diagnosis, did not know whether a child received a vaccine or not. In other words, the trial was a double-blind, randomized control trial. The trial had to be large, because the rate at which Polio occured in the population was 50 per 100,000. The treatment group saw 33 polio cases per 200,745; the control group saw 115 cases per 201,229. The estimated avearage treatment effect is about \\[40\\] with the 95% confidence band (based on approximate normality of the two sample means and their differences): \\[[-52,-28]\\] As this is an RCT, the confidence band suggests that the Polio vaccine caused the reduction in the risk of polio. The interesting thing here is that we dont need the underlying individual data to evaluate the effectivess of the vaccine. This is because the outcomes are Bernoulli random variables, and we have enough information to compute the estimate of ATE as well as the confidence intervals from the group case counts. We also compute the Vaccine Efficacy metric, which refers to the following measure according to the CDC: \\[VE = \\frac{Risk for Unvaccinated - Risk for Vaccinated}{Risk for Unvaccinated} \\] It describes the relative reduction in risk caused by vaccination. It is staighforward to get the VE estimate by just plugging-in the numbers, but how do we get the approximate variance estimate? I am too lazy to do calculations for the delta method, so I will just use a simulation (a form of approximate bootstrap) to obtain the confidence intervals. R code print(&quot;HW&quot;) ## [1] &quot;HW&quot;   Python code import numpy as np # linear algebra import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv) R code print(&quot;HW&quot;) ## [1] &quot;HW&quot;   Python code NT = 200745 #number of treated NC = 201229 #number of controlled YT = 33/NT #average outcome for treated YC =115/NC #average outcome for controlled print(&quot;Incidence per 100000 among treated:&quot; + str(YT*100000)) ## Incidence per 100000 among treated:16.438765598146905 print( &quot;Incidence per 100000 among controlled:&quot;+ str(YC*100000)) ## Incidence per 100000 among controlled:57.14882049803955 R code print(&quot;g&quot;) ## [1] &quot;g&quot;   Python code # treatment effect estimate reduction in incidence per 100000 people delta_hat = 100000*(YT-YC) print(&quot;Estimate TE of occurances per 100,000 &quot; + str(100000*(YT-YC))) ## Estimate TE of occurances per 100,000 -40.71005489989265 Var_delta_hat = (100000**2)*(YT*(1-YT)/NT + YC*(1-YC)/NC) # standard deviation print(&quot;Standard deviation for ATE&quot;+ str(Var_delta_hat**.5)) ## Standard deviation for ATE6.047412320702958 R code print(&quot;g&quot;) ## [1] &quot;g&quot;   Python code # here we are using the fact that outcomes are Bernoulli CI_delta = [delta_hat -1.96*Var_delta_hat**.5, delta_hat +1.96*Var_delta_hat**.5] print(&quot;95 % confidence interval is [&quot; + str(CI_delta[0]) + &quot;,&quot;+ str(CI_delta[1]) + &quot;]&quot; ) ## 95 % confidence interval is [-52.56298304847044,-28.85712675131485] R code print(&quot;g&quot;) ## [1] &quot;g&quot;   Python code # Here we calculate the overall effectiveness of the vaccine and construct confidence intervals for it NV = 200745; NU = 201229; RV = 33/NV; RU = 115/NU; VE = (RU - RV)/RU; print(&quot;Overall VE is &quot;+ str(VE) ) # this recovers the number in the table. # we set up a simulation example. # calulate variance of risk estimates: ## Overall VE is 0.7123516206478694 Var_RV = RV*(1-RV)/NV Var_RU = RU*(1-RU)/NU R code print(&quot;g&quot;) ## [1] &quot;g&quot;   Python code # set-up MC draws: B = 10000 RVs = RV + np.random.normal(0, 1, B)*(Var_RV)**.5 RUs = RU + np.random.normal(0, 1, B)*(Var_RU)**.5 VEs= (RUs - RVs)/RUs CI_VE_L = np.quantile(VEs, .025) CI_VE_U = np.quantile(VEs, .975) print(&quot;95 % confidence interval is [&quot; + str(CI_VE_L), &quot;,&quot;, str(CI_VE_U), &quot;]&quot; ) ## 95 % confidence interval is [0.5848112931270684 , 0.81397416093639 ] R code print(&quot;g&quot;) ## [1] &quot;g&quot;   Python code from sklearn.neighbors import KernelDensity import matplotlib import matplotlib.pyplot as plt from scipy.stats import norm from sklearn.neighbors import KernelDensity from sklearn.utils.fixes import parse_version # instantiate and fit the KDE model X= VEs[:, np.newaxis] X_plot = np.linspace(0, 1, 1000)[:, np.newaxis] kde = KernelDensity(kernel=&#39;gaussian&#39;, bandwidth=0.02).fit(X) log_dens = kde.score_samples(X_plot) plt.fill_between(X_plot[:, 0], np.exp(log_dens)) 4.2 Pfizer/BNTX Covid-19 RCT Here is a link to the FDA briefing and an interesting discussion, as well as data. Pfizer/BNTX was the first vaccine approved for emergency use to reduce the risk of Covid-19 decease. In studies to assess vaccine efficacy, volunteers were randomly assigned to receive either a treatment (2-dose vaccination) or a placebo, without knowing which they recieved. The doctors making the diagnoses did not know now whether a given volunteer received a vaccination or not. The results of the study are given in the following table: Figure 1 Here we see both the overall effects and the effects by age group. The confidence intervals for the averal ATE are tight and suggest high effectiveness of the vaccine. The confidence intervals for the age group \\(65-75\\) are much wider. We could group \\(65-75\\) and \\(&gt;75\\) groups to evaluate the effectiveness of the vaccine and also narrow down the width of the confidence band. In this case, the reported results are for vaccine effectiveness. We use the same approach as above. In the code cell below we calculate the overall effectiveness of the vaccie and construct confidence intervals for it. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
