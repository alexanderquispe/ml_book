[["simple-exercise-on-overfitting.html", "Chapter 3 Simple Exercise on Overfitting 3.1 1. First set p=n 3.2 2. Second, set p=n/2. 3.3 3. Third, set p/n =.05", " Chapter 3 Simple Exercise on Overfitting 3.1 1. First set p=n R code # No additional packages needed   Python code import numpy as np import random import statsmodels.api as sm R code set.seed(123) n = 1000 p = n X&lt;- matrix(rnorm(n*p), n, p) Y&lt;- rnorm(n)   Python code random.seed(10) n = 1000 p = n X = np.random.normal(0, 1, size=(n, p)) Y = np.random.normal(0, 1,n) R code print(&quot;p/n is&quot;) ## [1] &quot;p/n is&quot; print(p/n) ## [1] 1 print(&quot;R2 is&quot;) ## [1] &quot;R2 is&quot; print(summary(lm(Y~X))$r.squared) ## [1] 1 print(&quot;Adjusted R2 is&quot;) ## [1] &quot;Adjusted R2 is&quot; print(summary(lm(Y~X))$adj.r.squared) ## [1] NaN   Python code mod = sm.OLS(Y, X) # Describe model res = mod.fit() est2 = mod.fit() print(&quot;p/n is&quot;,p/n) ## p/n is 1.0 print(&quot;R2 is&quot;,res.rsquared) ## R2 is 1.0 print(&quot;Adjusted R2 is&quot;,est2.rsquared_adj) ## Adjusted R2 is nan ## ## C:\\Users\\alexa\\ANACON~1\\envs\\R-RETI~1\\lib\\site-packages\\statsmodels\\regression\\linear_model.py:1728: RuntimeWarning: divide by zero encountered in true_divide ## return 1 - (np.divide(self.nobs - self.k_constant, self.df_resid) ## C:\\Users\\alexa\\ANACON~1\\envs\\R-RETI~1\\lib\\site-packages\\statsmodels\\regression\\linear_model.py:1729: RuntimeWarning: invalid value encountered in double_scalars ## * (1 - self.rsquared)) 3.2 2. Second, set p=n/2. R code set.seed(123) n = 1000 p = n/2 X&lt;- matrix(rnorm(n*p), n, p) Y&lt;- rnorm(n)   Python code random.seed(10) n = 1000 p = n/2 X = np.random.normal(0, 1, size=(n, int(p))) Y = np.random.normal(0, 1,n) mod = sm.OLS(Y, X) # Describe model res = mod.fit() # print(res.summary()) R code print(&quot;p/n is&quot;) ## [1] &quot;p/n is&quot; print(p/n) ## [1] 0.5 print(&quot;R2 is&quot;) ## [1] &quot;R2 is&quot; print(summary(lm(Y~X))$r.squared) ## [1] 0.4922339 print(&quot;Adjusted R2 is&quot;) ## [1] &quot;Adjusted R2 is&quot; print(summary(lm(Y~X))$adj.r.squared) ## [1] -0.01654975   Python code est2 = mod.fit() print(&quot;p/n is&quot;,p/n) ## p/n is 0.5 print(&quot;R2 is&quot;,res.rsquared) ## R2 is 0.5225252357927701 print(&quot;Adjusted R2 is&quot;,est2.rsquared_adj) ## Adjusted R2 is 0.04505047158554021 3.3 3. Third, set p/n =.05 R code set.seed(123) n = 1000 p = .05*n X&lt;- matrix(rnorm(n*p), n, p) Y&lt;- rnorm(n)   Python code random.seed(10) n = 1000 p = 0.05*n int(p) ## 50 X = np.random.normal(0, 1, size=(n, int(p))) Y = np.random.normal(0, 1,n) mod = sm.OLS(Y, X) # Describe model res = mod.fit() # print(res.summary()) R code print(&quot;p/n is&quot;) ## [1] &quot;p/n is&quot; print(p/n) ## [1] 0.05 print(&quot;R2 is&quot;) ## [1] &quot;R2 is&quot; print(summary(lm(Y~X))$r.squared) ## [1] 0.04295907 print(&quot;Adjusted R2 is&quot;) ## [1] &quot;Adjusted R2 is&quot; print(summary(lm(Y~X))$adj.r.squared) ## [1] -0.00746458   Python code print(&quot;p/n is \\n&quot;,p/n ) #print(&quot;summary()\\n&quot;,res.summary()) ## p/n is ## 0.05 print(&quot;rsquared\\n&quot;,res.rsquared) ## rsquared ## 0.05168768824641645 print(&quot;rsquared_adj\\n&quot;,res.rsquared_adj) ## rsquared_adj ## 0.0017765139435963473 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
